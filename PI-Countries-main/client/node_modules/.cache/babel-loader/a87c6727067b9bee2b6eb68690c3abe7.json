{"ast":null,"code":"import { GET_COUNTRIES } from \"../actions\";\nconst initialState = {\n  countries: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return { ...state,\n        countries: action.payload.sort((a, b) => a.name > b.name ? 1 : -1)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["GET_COUNTRIES","initialState","countries","rootReducer","state","action","type","payload","sort","a","b","name"],"sources":["C:/Users/juanm/Desktop/PIcountries/PI-Countries-main/client/src/reducer/index.js"],"sourcesContent":["import { GET_COUNTRIES } from \"../actions\";\r\nconst initialState = {\r\n    countries: []\r\n}\r\n\r\nfunction rootReducer (state=initialState, action) {\r\n    switch(action.type) {\r\n        case GET_COUNTRIES:\r\n            return{\r\n                ...state,\r\n                countries: action.payload.sort((a,b)=> a.name>b.name?1:-1)\r\n            }\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE;AADM,CAArB;;AAIA,SAASC,WAAT,GAAkD;EAAA,IAA5BC,KAA4B,uEAAtBH,YAAsB;EAAA,IAARI,MAAQ;;EAC9C,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKN,aAAL;MACI,OAAM,EACF,GAAGI,KADD;QAEFF,SAAS,EAAEG,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoB,CAACC,CAAD,EAAGC,CAAH,KAAQD,CAAC,CAACE,IAAF,GAAOD,CAAC,CAACC,IAAT,GAAc,CAAd,GAAgB,CAAC,CAA7C;MAFT,CAAN;;IAIJ;MACI,OAAOP,KAAP;EAPR;AAUH;;AAED,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}